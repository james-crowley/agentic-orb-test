version: 2.1

orbs:
  agentic-cli: cci-labs/agentic-cli@0.0.10

workflows:
  label_event_workflow:
    jobs:
      - agentic-cli/label_event_claude:
          context: agentic
          webhook_body: << pipeline.trigger_parameters.webhook.body >>
          claude_model: sonnet
          allowed_associations: OWNER,MEMBER,COLLABORATOR
          github_api_token_var: GITHUB_API_TOKEN
          circleci_token_var: CIRCLECI_TOKEN
          debug_mode: true
          trigger_labels: needs-review,run-ci
          # Configurable tools for label-based automation workflows
          allowed_tools: Bash,Edit,FileRead,WebSearch,mcp__github,mcp__circleci-mcp-server
          # Custom prompt for intelligent label-based workflow automation
          prompt: |
            üö® CRITICAL REQUIREMENT: You MUST analyze label events and create actionable GitHub comments with next steps.

            MANDATORY TASK: Analyze the GitHub label event, confirm the triggering label, and provide intelligent workflow guidance.

            üìã REQUIRED WORKFLOW:
            1. ‚úÖ FIRST: Parse the webhook to identify EXACTLY which label triggered this workflow
            2. ‚úÖ SECOND: Use mcp__github__get_issue OR mcp__github__get_pull_request to get complete context
            3. ‚úÖ THIRD: Analyze the current state of the issue/PR comprehensively
            4. üî• FOURTH: IMMEDIATELY create a helpful comment using mcp__github__add_issue_comment explaining the label action and next steps
            5. ‚úÖ FIFTH: Write detailed analysis to /tmp/claude-output.txt

            üéØ COMMENT REQUIREMENTS:
            Your GitHub comment MUST include:
            - **Clear identification**: "I detected the `[LABEL_NAME]` label was [added/removed]"
            - **Current state analysis**: Summary of issue/PR status, assignees, milestones
            - **Specific next steps**: Actionable items based on the label and current state
            - **Timeline expectations**: When things should happen next
            - **Helpful resources**: Links to relevant documentation, templates, or examples

            üè∑Ô∏è LABEL-SPECIFIC ACTIONS:

            üìù **"needs-review" label:**
            - Identify if this is an issue or PR
            - For PRs: Check if draft, request specific reviewers, verify CI status
            - For issues: Request clarification, ask for more details, suggest templates
            - Provide review checklist and timeline

            üöÄ **"run-ci" label:**
            - Check current CI/CD status using mcp__circleci-mcp-server
            - Identify what tests/builds need to run
            - Provide CI troubleshooting if there are failures
            - Suggest next steps for deployment or testing

            üîß AVAILABLE TOOLS - USE STRATEGICALLY:
            - mcp__github__get_issue ‚Üê Get issue context and history
            - mcp__github__get_pull_request ‚Üê Get PR context and status
            - mcp__github__add_issue_comment ‚Üê CREATE REQUIRED COMMENT (MANDATORY!)
            - mcp__github__update_issue ‚Üê Update assignees, milestones if needed
            - mcp__github__search_issues ‚Üê Find related issues for context
            - mcp__circleci-mcp-server ‚Üê Check CI/CD status for run-ci label
            - FileRead,Edit,Bash ‚Üê Analyze repository files if needed

            üí° ANALYSIS FOCUS:
            - **Context awareness**: Understand the full issue/PR lifecycle stage
            - **Team coordination**: Help facilitate smooth collaboration
            - **Process optimization**: Suggest improvements to workflow efficiency
            - **Quality assurance**: Ensure proper review and testing processes

            ‚ùå FAILURE CONDITION: If you do NOT create a GitHub comment explaining the label action and providing next steps, this task has FAILED.
            ‚úÖ SUCCESS CONDITION: Team receives clear, actionable guidance based on the label event with concrete next steps.

            The WEBHOOK_BODY environment variable contains the complete GitHub webhook payload with label event details.