version: 2.1

orbs:
  agentic-cli: cci-labs/agentic-cli@0.0.9

jobs:
  install-ai-clis:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      
      # Install Claude CLI with error handling
      - run:
          name: "Install Claude CLI"
          command: |
            echo "Installing Claude CLI..."
      - agentic-cli/install_claude:
          version: latest
          
      # Install Gemini CLI with error handling
      - run:
          name: "Install Gemini CLI"
          command: |
            echo "Installing Gemini CLI..."
      - agentic-cli/install_gemini:
          version: latest
          
      # Install Rovo CLI (Atlassian CLI) with error handling
      - run:
          name: "Install Rovo CLI"
          command: |
            echo "Installing Rovo CLI..."
      - agentic-cli/install_rovo:
          version: latest
          
      # Verify all installations with proper error handling
      - run:
          name: "Verify Claude CLI Installation"
          command: |
            echo "=== Claude CLI Version ==="
            if claude --version; then
              echo "✅ Claude CLI installed successfully"
            else
              echo "❌ Claude CLI installation failed"
              exit 1
            fi
            
      - run:
          name: "Verify Gemini CLI Installation"
          command: |
            echo "=== Gemini CLI Version ==="
            if gemini --version; then
              echo "✅ Gemini CLI installed successfully"
            else
              echo "❌ Gemini CLI installation failed"
              exit 1
            fi
            
      - run:
          name: "Verify Rovo CLI Installation"
          command: |
            echo "=== Rovo CLI Version ==="
            if acli --version; then
              echo "✅ Rovo CLI installed successfully"
            else
              echo "❌ Rovo CLI installation failed"
              exit 1
            fi

  test-claude-mcp:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - agentic-cli/setup_claude:
          version: "latest"
          node_version: "20"
          api_key_var: "ANTHROPIC_API_KEY"
      - agentic-cli/prompt_claude:
          prompt: |
            Please use the CircleCI MCP server to analyze our pipeline status.
            To determine what project to look up please look at the environment variables for CircleCI.
          model: "sonnet"
          output_format: "text"
          timeout: 600
          save_output: true
          mcp_config: |
            {
              "mcpServers": {
                "circleci-mcp-server": {
                  "command": "npx",
                  "args": ["-y", "@circleci/mcp-server-circleci"],
                  "env": {
                    "CIRCLECI_TOKEN": "${CIRCLECI_TOKEN}",
                    "CIRCLECI_BASE_URL": "https://circleci.com"
                  }
                }
              }
            }
          allowed_tools: "Bash,Edit,FileRead,WebSearch,mcp__circleci-mcp-server"

workflows:
  ai-cli-setup:
    jobs:
      - install-ai-clis
      - test-claude-mcp:
          context: agentic
          requires:
            - install-ai-clis